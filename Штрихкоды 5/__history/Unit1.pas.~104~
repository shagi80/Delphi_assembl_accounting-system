unit Unit1;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls, jpeg, StdCtrls, Buttons, ComCtrls, RpDefine, RpRave, DB,
  DBClient, RpCon, RpConDS, DBCtrls, RpBase, RpSystem, AppEvnts;

type
  TForm1 = class(TForm)
    BackPn: TPanel;
    Img: TImage;
    BtnPn: TPanel;
    PrBtn: TBitBtn;
    ModPn: TPanel;
    ModCapPn: TPanel;
    ModLB: TListBox;
    SpeedButton1: TSpeedButton;
    Label1: TLabel;
    DatePn: TPanel;
    Panel2: TPanel;
    SpeedButton2: TSpeedButton;
    Label2: TLabel;
    Clnd: TMonthCalendar;
    SnPn: TPanel;
    Panel3: TPanel;
    SpeedButton3: TSpeedButton;
    Label3: TLabel;
    Label4: TLabel;
    StNumED: TEdit;
    NumCountED: TEdit;
    Label5: TLabel;
    SpeedButton4: TSpeedButton;
    RvPrj: TRvProject;
    RvDSC: TRvDataSetConnection;
    Label6: TLabel;
    SmCB: TComboBox;
    RvSystem1: TRvSystem;
    ApplicationEvents1: TApplicationEvents;
    function ApplicationEvents1Help(Command: Word; Data: Integer;
      var CallHelp: Boolean): Boolean;
    procedure RvSystem1AfterPreviewPrint(Sender: TObject);
    procedure PrBtnClick(Sender: TObject);
    procedure SpeedButton4Click(Sender: TObject);
    procedure ClndClick(Sender: TObject);
    procedure ModLBDblClick(Sender: TObject);
    procedure SpeedButton1Click(Sender: TObject);
    procedure ImgMouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure ImgMouseMove(Sender: TObject; Shift: TShiftState; X, Y: Integer);
    procedure FormCreate(Sender: TObject);
    procedure FormShow(Sender: TObject);
    function  InActiveAr(X,Y : integer):integer;
    procedure PaintArea(i:integer ; act:boolean);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

uses PrModeUnit, HelpUnit;

type
  TModRec = record                       //Тип записи о модели
    Name,Pwr,Net,Code : string[16];      //имя, эл мощн, вес, код в номер
  end;

var
  BaseImgHeight,
  BaseImgWidth   : integer;              //Рамеры базового рисунка
  ArLstCount     : integer;              //Кол-во активных областей
  BaseActArLst   : array of TRect;       //Массив координат областей
  ActArNameLst   : array of string[32];  //Массив имен областей
  ActArFntSzLst  : array of byte;        //Массив размеров шрифтов
  ActArFntAlLst  : array of byte;        //Массив значения Aling
  ActArActFlLst  : array of boolean;     //Массив знач реакции на движ мыши
  M              : real;                 //Масштаб базового рисунка
  ActArInd       : byte;                 //Индекс активной области

  ModCount       : integer;              //Кол-во моделей
  ModRecLst      : array of TModRec;     //Массив записей о моделей
  OTKNameCount   : integer;              //Кол-во имен контролеров ОТК
  OTKNameLst     : array of string[16];  //Массив имен контролеров ОТК

  ModInd,OTKInd,
  SmInd          : byte;                 //Индексы тек знач масивов
  Date           : TDate;                //Дата
  StNum,NumCount : word;                 //Диапазон сер номеров

procedure TForm1.PrBtnClick(Sender: TObject);
var
  CDS : TClientDataSet;
  i   : integer;
  str : string;
  bar : string;
begin
  // Окно выбора размера этикетки
  // if PrModeForm.ShowModal=mrCancel then Abort;
  CDS:=TClientDataSet.Create(self);
  CDS.FieldDefs.Add('SN',ftString,16,false);
  CDS.FieldDefs.Add('BARCODE',ftString,16,false);
  //CDS.FieldDefs.Add('Pic',ftGraphic,0,false);
  CDS.CreateDataSet;
  for I := 0 to NumCount - 1 do
    begin
      str:='K'+ModRecLst[ModInd].Code;
      bar:=FormatFloat('00',ModInd+1);
      str:=str+FormatDateTime('ddmmyy',Date);
      bar:=bar+FormatDateTime('ddmmyy',Date);
      str:=str+SmCb.Items[SmInd];
      bar:=bar+inttostr(SmInd+1); // Номер смены в цифре: А=1, B=2 и т.д.
      //Нумерация с начала для печати на листах
      if PrModeForm.RadioGroup1.ItemIndex=0 then
        begin
          str:=str+FormatFloat('000',StNum+i);
          bar:=bar+FormatFloat('000',StNum+i);
        end;
      //Нумерация с конца для печати на рулонах
      if (PrModeForm.RadioGroup1.ItemIndex>0) then
        begin
          str:=str+FormatFloat('000',StNum+NumCount-1-i);
          bar:=bar+FormatFloat('000',StNum+NumCount-1-i);
        end;
      CDS.Append;
      CDS.FieldByName('SN').AsString:=str;
      CDS.FieldByName('BARCODE').AsString:=bar;
      CDS.Post;
    end;
  RvDSC.DataSet:=CDS;
  // Выбор отчета в зависимости от размера этикетки
{  if PrModeForm.RadioGroup1.ItemIndex=0 then
    begin
      RvSystem1.SystemPrinter.Orientation:=poPortrait;
      RvPrj.SetProjectFile(ExtractFilePath(Application.ExeName)+'Print1.rav');
    end;
  if PrModeForm.RadioGroup1.ItemIndex=1 then
    begin
      RvSystem1.SystemPrinter.Orientation:=poPortrait;
      RvPrj.SetProjectFile(ExtractFilePath(Application.ExeName)+'Print2.rav');
    end;
  if PrModeForm.RadioGroup1.ItemIndex=2 then
    begin
      RvSystem1.SystemPrinter.Orientation:=poLandScape;
      RvPrj.SetProjectFile(ExtractFilePath(Application.ExeName)+'Print3.rav');
    end;
  if PrModeForm.RadioGroup1.ItemIndex=3 then  }
    begin
      //Отчет под размер 8х8 см
      RvSystem1.SystemPrinter.Orientation:=poLandScape;
      RvPrj.SetProjectFile(ExtractFilePath(Application.ExeName)+'Print4.rav');
    end;
  RvPrj.SetParam('Model',ModRecLst[ModInd].Name);
  RvPrj.SetParam('Pwr',ModRecLst[ModInd].Pwr);
  RvPrj.SetParam('Net',ModRecLst[ModInd].Net);
  RvPrj.SetParam('Date',DateTostr(Date));
  RvPrj.SetParam('OTKName',OTKNameLst[OTKInd]);
  RvPrj.ExecuteReport('Report1');
  RvPrj.Close;
end;
procedure TForm1.RvSystem1AfterPreviewPrint(Sender: TObject);
begin

end;

//Выбор значения в календаре
function TForm1.ApplicationEvents1Help(Command: Word; Data: Integer;
  var CallHelp: Boolean): Boolean;
begin
 //showmessage('f');
 // self.HelpFile:=ExtractFilePath(Application.ExeName) +'Help.chm';
 //Application.HelpCommand(HELP_CONTENTS, 0);
// StoHelpViewer.HtmlExt := '.html';
 Application.HelpSystem.ShowTableOfContents;
 //Application.HelpContext(0);
 //Application.HelpKeyword('Print1');
 //Application.HelpJump ('Print1');
end;

procedure TForm1.ClndClick(Sender: TObject);
begin
  Date:=Clnd.Date;
  DatePn.Visible:=false;
  ActArNamelst[1]:=DateToStr(Date);
  self.PaintArea(1,false);
  ActArInd:=100;
end;
//Создание формы, инициализация переменных
procedure TForm1.FormCreate(Sender: TObject);
var
  strs : TStringList;
  i : integer;
  str : string;
begin
  Application.HelpFile:=GetCurrentDir+'\Help.chm';
  Strs:=TStringList.Create;
  Strs.LoadFromFile(GetCurrentDir+'\ModData.txt');
  ModCount:=Strs.Count;
  SetLength(ModRecLst,ModCount);
  for i := 0 to Strs.Count - 1 do
    begin
      str:=copy(strs[i],1,pos('|',strs[i])-1);
      ModRecLst[i].Name:=str;
      strs[i]:=copy(strs[i],pos('|',strs[i])+1,MaxInt);
      str:=copy(strs[i],1,pos('|',strs[i])-1);
      ModRecLst[i].Pwr:=str;
      strs[i]:=copy(strs[i],pos('|',strs[i])+1,MaxInt);
      str:=copy(strs[i],1,pos('|',strs[i])-1);
      ModRecLst[i].Net:=str;
      strs[i]:=copy(strs[i],pos('|',strs[i])+1,MaxInt);
      str:=copy(strs[i],1,MaxInt);
      ModRecLst[i].Code:=str;
    end;
  Strs.LoadFromFile(GetCurrentDir+'\OTKNameData.txt');
  OTKNameCount:=Strs.Count;
  SetLength(OTKNameLst,OTKNameCount);
  for i := 0 to Strs.Count - 1 do OTKNameLst[i]:=Strs[i];
  //
  Date:=Now;
  StNum:=1;
  NumCount:=10;
  ModInd:=0;
  OTKInd:=0;
  SmInd:=0;
  //
  SmCB.ItemIndex:=SmInd;
  ArLstCount:=6;
  SetLength(BaseActArLst,ArLstCount);
  SetLength(ActArNameLst,ArLstCount);
  SetLength(ActArFntSzLst,ArLstCount);
  SetLength(ActArFntAlLst,ArLstCount);
  SetLength(ActArActFlLst,ArLstCount);
  BaseImgHeight :=480;
  BaseImgWidth  :=480;
  ActArNameLst[0]:=ModRecLst[ModInd].Name;
  BaseActArLst[0].Left   :=100;
  BaseActArLst[0].Top    :=50;
  BaseActArLst[0].Right  :=365;
  BaseActArLst[0].Bottom :=80;
  ActArFntSzLst[0]:=18;
  ActArFntAlLst[0]:=2;
  ActArActFlLst[0]:=true;
  ActArNameLst[1]:=DateToStr(date);
  BaseActArLst[1].Left   :=300;
  BaseActArLst[1].Top    :=162;
  BaseActArLst[1].Right  :=455;
  BaseActArLst[1].Bottom :=182;
  ActArFntSzLst[1]:=14;
  ActArFntAlLst[1]:=3;
  ActArActFlLst[1]:=true;
  ActArNameLst[2]:='';//OTKNameLst[OTKInd];
  BaseActArLst[2].Left   :=0;
  BaseActArLst[2].Top    :=0;
  BaseActArLst[2].Right  :=0;
  BaseActArLst[2].Bottom :=0;
  ActArFntSzLst[2]:=14;
  ActArFntAlLst[2]:=3;
  ActArActFlLst[2]:=false;
  ActArNameLst[3]:=IntToStr(NumCount)+' ном с '+FormatFloat('000',StNum)+', смена '+SmCB.Items[SmInd];
  BaseActArLst[3].Left   :=250;
  BaseActArLst[3].Top    :=190;
  BaseActArLst[3].Right  :=455;
  BaseActArLst[3].Bottom :=210;
  ActArFntSzLst[3]:=14;
  ActArFntAlLst[3]:=3;
  ActArActFlLst[3]:=true;
  ActArNameLst[4]:=ModRecLst[ModInd].Net;
  BaseActArLst[4].Left   :=350;
  BaseActArLst[4].Top    :=137;
  BaseActArLst[4].Right  :=455;
  BaseActArLst[4].Bottom :=157;
  ActArFntSzLst[4]:=14;
  ActArFntAlLst[4]:=3;
  ActArActFlLst[4]:=false;
  ActArNameLst[5]:=ModRecLst[ModInd].Pwr;
  BaseActArLst[5].Left   :=350;
  BaseActArLst[5].Top    :=115;
  BaseActArLst[5].Right  :=455;
  BaseActArLst[5].Bottom :=135;
  ActArFntSzLst[5]:=14;
  ActArFntAlLst[5]:=3;
  ActArActFlLst[5]:=false;
  ActArInd:=100;
end;
//Перерисовка активных областей
procedure TForm1.PaintArea(i: Integer; act: Boolean);
var
  str : string;
  x   : integer;
begin
  if act then Img.Canvas.Font.Color:=clRed else Img.Canvas.Font.Color:=clBlue;
  Img.Canvas.Font.Size:=ActArFntSzLst[i];
  Img.Canvas.Font.Style:=[fsBold];
  str:=ActArNameLst[i];
  x:=0;
  case ActArFntAlLst[i] of
    1 : x:=0;
    2 : x:=round((BaseActArLst[i].Right-BaseActArLst[i].Left-Img.Canvas.TextWidth(str))/2);
    3 : x:=BaseActArLst[i].Right-BaseActArLst[i].Left-Img.Canvas.TextWidth(str);
  end;
  Img.Canvas.Pen.Color:=clWhite;
  Img.Canvas.Rectangle(BaseActArLst[i]);
  Img.Canvas.TextOut(BaseActArLst[i].Left+x,BaseActArLst[i].Top+1,str);
end;
//Кн закрытия "окон" ввода
procedure TForm1.SpeedButton1Click(Sender: TObject);
begin
  ModPn.Visible  :=false;
  DatePn.Visible :=false;
  SnPn.Visible   :=false;
  ActArInd:=100;
end;
//Кн "Применить" в окне ввода диапазона номеров
procedure TForm1.SpeedButton4Click(Sender: TObject);
var
  i : integer;
  str : string;
  fl:boolean;
begin
  SmInd:=SmCB.ItemIndex;
  str:=StNumEd.Text+NumCountED.Text;
  i:=1;
  fl:=false;
  while(i<=Length(str))and(not fl)do
    if(str[i] in ['0'..'9'])then inc(i) else fl:=true;
  if fl then MessageDlg('Ошибка ввода данных !',mtError,[mbOk],0) else
    begin
      StNum:=StrToInt(StNumEd.Text);
      NumCount:=StrToInt(NumCountED.Text);
      ActArInd:=100;
      SnPn.Visible:=false;
      ActArNameLst[3]:=IntToStr(NumCount)+' ном с '+FormatFloat('000',StNum)+', смена '+SmCB.Items[SmInd];
      self.PaintArea(3,false);
    end;
end;
//Обработка нажатия мыши на рисунке
procedure TForm1.ImgMouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
var
  i : integer;
begin
  ActArInd:=100;
  if self.InActiveAr(X,Y)=0 then
    begin
      ActArInd:=0;
      SnPn.Visible:=false;
      DatePn.Visible :=false;
      ModPn.Visible:=true;
      ModPn.Left:=round((self.ClientWidth-ModPn.Width)/2);
      ModPn.Top:=round((self.ClientHeight-ModPn.Height)/2);
      ModLB.Items.Clear;
      for I := 0 to ModCount - 1 do ModLB.Items.Add(ModRecLst[i].Name);
    end;
  if self.InActiveAr(X,Y)=1 then
    begin
      ActArInd:=1;
      SnPn.Visible:=false;
      ModPn.Visible:=false;
      DatePn.Visible:=true;
      DatePn.Left:=round((self.ClientWidth-DatePn.Width)/2);
      DatePn.Top:=round((self.ClientHeight-DatePn.Height)/2);
      Clnd.Date:=Now;
    end;
  if self.InActiveAr(X,Y)=2 then
    begin
      ActArInd:=2;
      SnPn.Visible:=false;
      DatePn.Visible :=false;
      ModPn.Visible:=true;
      ModPn.Left:=round((self.ClientWidth-ModPn.Width)/2);
      ModPn.Top:=round((self.ClientHeight-ModPn.Height)/2);
      ModLB.Items.Clear;
      for I := 0 to OTKNameCount - 1 do ModLB.Items.Add(OTKNameLst[i]);
    end;
  if self.InActiveAr(X,Y)=3 then
    begin
      ActArInd:=3;
      DatePn.Visible :=false;
      ModPn.Visible:=false;
      SnPn.Visible:=true;
      SnPn.Left:=round((self.ClientWidth-SnPn.Width)/2);
      SnPn.Top:=round((self.ClientHeight-SnPn.Height)/2);
      StNumED.Text:=IntToStr(StNum);
      NumCountED.Text:=IntToStr(NumCount);
      SmCB.ItemIndex:=SmInd;
    end;
end;
//Обработка движения мыши по рисунку
procedure TForm1.ImgMouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
var
  i : integer;
begin
  for I := 0 to ArLstCount - 1 do self.PaintArea(i,false);
  i:=self.InActiveAr(x,y);
  if i>=0 then
    begin
     self.PaintArea(i,true);
      if i=0 then
        begin
          self.PaintArea(4,true);
          self.PaintArea(5,true);
        end;
    end;
end;
//Определение нахождения мыши над активной областью
function TForm1.InActiveAr(X: Integer; Y: Integer): integer;
var
  i,res : integer;
begin
  res:=-1;
  I := 0;
  while((i<ArLstCount)and(res<0))do
    if (X>BaseActArLst[i].Left*M)and(X<BaseActArLst[i].Right*M)
      and(Y>BaseActArLst[i].Top*M)and(Y<BaseActArLst[i].Bottom*M)
      and(ActArActFlLst[i]) then res:=i
    else inc(i);
  result:=res;
end;
//Клик в "окне" выбора модели/имени контролера ОТК
procedure TForm1.ModLBDblClick(Sender: TObject);
begin
  if (ModLB.ItemIndex>=0)and(ActArInd=0) then
    begin
      ModPn.Visible:=false;
      ActArNameLst[0]:=ModRecLst[ModLB.ItemIndex].Name;
      ActArNameLst[4]:=ModRecLst[ModLB.ItemIndex].Net;
      ActArNameLst[5]:=ModRecLst[ModLB.ItemIndex].Pwr;
      ModInd:=ModLB.ItemIndex;
      self.PaintArea(0,false);
      self.PaintArea(4,false);
      self.PaintArea(5,false);
    end;
  if (ModLB.ItemIndex>=0)and(ActArInd=2) then
    begin
      ModPn.Visible:=false;
      ActArNameLst[2]:=OTKNameLst[ModLB.ItemIndex];
      OTKInd:=ModLB.ItemIndex;
      self.PaintArea(2,false);
    end;
  ActArInd:=100;
end;
//Показ окна, задание размеров окна исходя из соотношений сторон рисунка
procedure TForm1.FormShow(Sender: TObject);
var
  i : integer;
begin
  //self.Height:=round(screen.Height-(screen.Height/4));
  //self.Width:=round(self.Width+Img.Height*BaseImgWidth/BaseImgHeight-Img.Width);
  PrBtn.Left:=round((self.ClientWidth-PrBtn.Width)/2);
  M:=img.Height/BaseImgHeight;
  for i := 0 to ArLstCount - 1 do self.PaintArea(i,false);
end;

end.
